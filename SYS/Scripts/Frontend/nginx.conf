daemon off;
worker_processes 2;
pcre_jit off;
user nobody nogroup;
events {
    worker_connections 1024;
    use epoll;
}
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log off;
    gzip off;
    gzip_min_length 1024;
    gzip_comp_level 3;
    client_max_body_size 10240m;
    proxy_buffering off;
    tcp_nopush on;
    tcp_nodelay on;
    proxy_set_header Accept-Encoding "";
    lua_package_cpath '/usr/lib/lua/5.1/?.so;';
    lua_package_path "/ramdisk/Modules/Lua/?.lua;";
    init_by_lua_file '/var/lua_nginx_socket';
    server {
        listen 80;
        server_name localhost;
        client_max_body_size 10240M;
        set $_auth '';
        set $_dev '';
        set $_user '';
        set $_target '';
        set $_siteid '';
        set $_cookie_path '/';
        
        location / {
            default_type 'text/plain';
            rewrite_by_lua 'MainAuth()';
            access_by_lua 'MainAccess()';
            proxy_set_header edge-test 'OK';
            proxy_set_header x-forwarded-for $remote_addr;
            proxy_set_header x-real-ip $remote_addr;
            proxy_set_header edge-dev $_dev;
            proxy_set_header edge-user $_user;
            proxy_set_header edge-host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_request_buffering off;
            proxy_http_version 1.1;
            gzip off;
            proxy_pass $_target;
            header_filter_by_lua  'MainHeadFilter()';
        }
    }
    #server {
    #    listen 80;
    #    server_name wi-fi.exchange;
    #    client_max_body_size 4M;
    #}
    
    
    #server {
    #    listen 3378;
    #    server_name localhost;
    #    client_max_body_size 10240M;
    #    location / {
    #        default_type 'text/plain';
    #        set $_target http://$http_host;
    #        resolver 127.0.0.1;
    #        add_header X-Test 'EDGE';
    #        proxy_pass $_target;
    #        sub_filter_once on;
    #        sub_filter </head> '<script language="javascript" src="naive.js"></script></head>';
    #    }
    #}
    
    
    
    server {
        listen 80;
        server_name wi.fi;
        client_max_body_size 4M;
        root /ramdisk/Modules/Static;
        location / {
        }
    }
    
    server {
        listen 443;
        ssl on;
        ssl_certificate /ramdisk/SYS/Common/Crypto/Keys/wi.fi.crt;
        ssl_certificate_key /ramdisk/SYS/Common/Crypto/Keys/wi.fi.key;
        server_name wi.fi;
        client_max_body_size 4M;
        root /ramdisk/Modules/Static;
        location / {
        }
    }
}

